name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: ['21.x']

    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Use node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        id: install
        run: npm install

      - name: 'Lint: eslint'
        id: eslint
        if: ${{ steps.install.outcome == 'success' }}
        run: npm run eslint

      - name: 'Lint: tsc'
        id: tsc
        if: ${{ steps.install.outcome == 'success' }}
        run: npm run tsc

      - name: Build
        id: build
        if: ${{ steps.install.outcome == 'success' }}
        run: npm run build.nolint

      - name: Build runner & Push Docker Image
        if: ${{ steps.build.outcome == 'success' }}
        uses: niqzart/ffs-devops/docker-build@main
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ github.repository_owner }}-${{ github.event.repository.name }}
          tag: ${{ github.ref_name == 'main' && 'latest' || needs.namer.outputs.tag }}
          base-tag: latest
          dockerfile: "./runner.dockerfile"
