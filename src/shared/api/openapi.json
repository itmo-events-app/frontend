{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/tasks/{id}": {
      "get": {
        "tags": [
          "task-controller"
        ],
        "summary": "Получение задачи по id",
        "operationId": "taskGet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID задачи",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "task-controller"
        ],
        "summary": "Редактирование задачи",
        "operationId": "taskEdit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID задачи",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "task-controller"
        ],
        "summary": "Удаление задачи",
        "operationId": "taskDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID задачи",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/tasks/{id}/status": {
      "put": {
        "tags": [
          "task-controller"
        ],
        "summary": "Установка статуса задачи",
        "operationId": "taskSetStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID задачи",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "description": "Новый статус задачи",
                "enum": [
                  "NEW",
                  "IN_PROGRESS",
                  "EXPIRED",
                  "DONE"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{id}/assignee": {
      "put": {
        "tags": [
          "task-controller"
        ],
        "summary": "Назначение себя исполнителем задачи",
        "operationId": "taskTakeOn",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID задачи",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "task-controller"
        ],
        "summary": "Удалеине исполнителя задачи",
        "operationId": "taskDeleteAssignee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID задачи",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{id}/assignee/{userId}": {
      "put": {
        "tags": [
          "task-controller"
        ],
        "summary": "Назначение исполнителя задачи",
        "operationId": "taskSetAssignee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID задачи",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID пользователя",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/event/{dstEventId}": {
      "put": {
        "tags": [
          "task-controller"
        ],
        "summary": "Перемещение списка задач",
        "operationId": "taskListMove",
        "parameters": [
          {
            "name": "dstEventId",
            "in": "path",
            "description": "ID мероприятия, куда задача будет перемещена",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "task-controller"
        ],
        "summary": "Копирование списка задач",
        "operationId": "taskListCopy",
        "parameters": [
          {
            "name": "dstEventId",
            "in": "path",
            "description": "ID мероприятия, куда задача будет скопирована",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/{id}": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "summary": "Получение роли по id",
        "operationId": "getRoleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID роли",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "role-controller"
        ],
        "summary": "Редактирование роли",
        "operationId": "editRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID роли",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "role-controller"
        ],
        "summary": "Удаление роли",
        "operationId": "deleteRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID роли",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/roles/system/{userId}": {
      "put": {
        "tags": [
          "role-controller"
        ],
        "summary": "Назначение пользователю системной роли",
        "operationId": "assignSystemRole",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "description": "ID роли",
                "format": "int32"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/roles/system-revoke/{userId}": {
      "put": {
        "tags": [
          "role-controller"
        ],
        "summary": "Лишение пользователя системной роли",
        "operationId": "revokeSystemRole",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/profile/change-password": {
      "put": {
        "tags": [
          "profile-controller"
        ],
        "summary": "Смена пароля пользователя",
        "operationId": "changePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/profile/change-name": {
      "put": {
        "tags": [
          "profile-controller"
        ],
        "summary": "Смена имени пользователя",
        "operationId": "changeName",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangeNameRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/profile/change-email": {
      "put": {
        "tags": [
          "profile-controller"
        ],
        "summary": "Смена email пользователя",
        "operationId": "changeEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangeEmailRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/places/{id}": {
      "get": {
        "tags": [
          "place-controller"
        ],
        "summary": "Получение площадки по id",
        "operationId": "placeGet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID площадки",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "place-controller"
        ],
        "summary": "Редактирование площадки",
        "operationId": "placeEdit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID площадки",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "place-controller"
        ],
        "summary": "Удаление площадки",
        "operationId": "placeDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID площадки",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/notifications": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Получение списка всех уведомлений",
        "operationId": "getAllNotifications",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы, с которой начать показ уведомлений",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            },
            "example": 0
          },
          {
            "name": "size",
            "in": "query",
            "description": "Число мероприятий на странице",
            "required": true,
            "schema": {
              "maximum": 25,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 15
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationResponse"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Установка статуса прочитано у всех уведомлений",
        "operationId": "setAllAsSeenNotifications",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы, с которой начать показ уведомлений",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            },
            "example": 0
          },
          {
            "name": "size",
            "in": "query",
            "description": "Число мероприятий на странице",
            "required": true,
            "schema": {
              "maximum": 25,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 15
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/{notificationId}": {
      "put": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Установка статуса прочитано у одного уведомления",
        "operationId": "setOneAsSeenNotification",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "ID уведомления",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 15
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{id}": {
      "get": {
        "tags": [
          "event-controller"
        ],
        "summary": "Получение мероприятия по id",
        "operationId": "getEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "event-controller"
        ],
        "summary": "Обновление мероприятия",
        "operationId": "updateEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "event-controller"
        ],
        "summary": "Удаление мероприятия",
        "operationId": "deleteEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Регистрация пользователя",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Получение логина пользователя",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/approveRegister/{requestId}": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Одобрение заявки на регистрацию",
        "operationId": "approveRegister",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "ID заявки на регистрацию",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/tasks": {
      "post": {
        "tags": [
          "task-controller"
        ],
        "summary": "Создание задачи",
        "operationId": "taskAdd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/organizer/{userId}/{eventId}": {
      "post": {
        "tags": [
          "role-controller"
        ],
        "summary": "Назначение пользователю роли Организатор",
        "operationId": "assignOrganizerRole",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "role-controller"
        ],
        "summary": "Лишение пользователя роли Организатор",
        "operationId": "revokeOrganizerRole",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/roles/organizational/{userId}/{eventId}/{roleId}": {
      "post": {
        "tags": [
          "role-controller"
        ],
        "summary": "Назначение пользователю организационной роли",
        "operationId": "assignOrganizationalRole",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "ID роли",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "role-controller"
        ],
        "summary": "Лишение пользователя организационной роли",
        "operationId": "revokeOrganizationalRole",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "ID роли",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/roles/assistant/{userId}/{eventId}": {
      "post": {
        "tags": [
          "role-controller"
        ],
        "summary": "Назначение пользователю роли Помощник",
        "operationId": "assignAssistantRole",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "role-controller"
        ],
        "summary": "Лишение пользователя роли Помощник",
        "operationId": "revokeAssistantRole",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/roles/": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "summary": "Получение списка всех ролей",
        "operationId": "getAllRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "role-controller"
        ],
        "summary": "Создание роли",
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/places": {
      "get": {
        "tags": [
          "place-controller"
        ],
        "summary": "Фильтрация списка площадок",
        "operationId": "getAllOrFilteredPlaces",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы, с которой начать показ площадок",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 0
          },
          {
            "name": "size",
            "in": "query",
            "description": "Число площадок на странице",
            "required": false,
            "schema": {
              "maximum": 50,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 5
            },
            "example": 15
          },
          {
            "name": "name",
            "in": "query",
            "description": "Имя площадки",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Университет ИТМО"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlaceResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "place-controller"
        ],
        "summary": "Создание площадки",
        "operationId": "placeAdd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/events": {
      "get": {
        "tags": [
          "event-controller"
        ],
        "summary": "Фильрация мероприятий",
        "operationId": "getAllOrFilteredEvents",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы, с которой начать показ мероприятий",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 0
          },
          {
            "name": "size",
            "in": "query",
            "description": "Число мероприятий на странице",
            "required": false,
            "schema": {
              "maximum": 50,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 15
            },
            "example": 15
          },
          {
            "name": "parentId",
            "in": "query",
            "description": "ID родительского мероприятия",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 12
          },
          {
            "name": "title",
            "in": "query",
            "description": "Название мероприятия",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "День первокурсника"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Дата начала мероприятия",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2024-09-01Е12:00:00"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Дата окончания мероприятия",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2024-09-29Е17:00:00"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Статус мероприятия",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DRAFT",
                "PUBLISHED",
                "COMPLETED",
                "CANCELED"
              ]
            },
            "example": "PUBLISHED"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Формат мероприятия",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ONLINE",
                "OFFLINE",
                "HYBRID"
              ]
            },
            "example": "OFFLINE"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "event-controller"
        ],
        "summary": "Создание мероприятия",
        "operationId": "addEventByOrganizer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{id}/copy": {
      "post": {
        "tags": [
          "event-controller"
        ],
        "summary": "Копирование мероприятия",
        "operationId": "copyEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "deep",
            "in": "query",
            "description": "Включить копирование активностей",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/activity": {
      "post": {
        "tags": [
          "event-controller"
        ],
        "summary": "Создание активности мероприятия",
        "operationId": "addActivity",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EventRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/where-assignee": {
      "get": {
        "tags": [
          "task-controller"
        ],
        "summary": "Получение списка задач где пользователь является исполнителем",
        "operationId": "taskListShowWhereAssignee",
        "parameters": [
          {
            "name": "assignerId",
            "in": "query",
            "description": "ID Создателя задачи",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 13
          },
          {
            "name": "taskStatus",
            "in": "query",
            "description": "Статус задачи",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NEW",
                "IN_PROGRESS",
                "EXPIRED",
                "DONE"
              ]
            }
          },
          {
            "name": "deadlineLowerLimit",
            "in": "query",
            "description": "Мягкий дедлайн задачи",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "deadlineUpperLimit",
            "in": "query",
            "description": "Жесткий дедлайн задачи",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/event/{eventId}": {
      "get": {
        "tags": [
          "task-controller"
        ],
        "summary": "Получение списка задач мероприятия",
        "operationId": "taskListShowInEvent",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "assigneeId",
            "in": "query",
            "description": "ID Исполнителя задачи",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 123
          },
          {
            "name": "assignerId",
            "in": "query",
            "description": "ID Создателя задачи",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 13
          },
          {
            "name": "taskStatus",
            "in": "query",
            "description": "Статус задачи",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NEW",
                "IN_PROGRESS",
                "EXPIRED",
                "DONE"
              ]
            }
          },
          {
            "name": "deadlineLowerLimit",
            "in": "query",
            "description": "Мягкий дедлайн задачи",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "deadlineUpperLimit",
            "in": "query",
            "description": "Жесткий дедлайн задачи",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "subEventTasksGet",
            "in": "query",
            "description": "Включить получение подзадач",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/event/{eventId}/where-assignee": {
      "get": {
        "tags": [
          "task-controller"
        ],
        "summary": "Получение списка задач мероприятия где пользователь является исполнителем",
        "operationId": "taskListShowInEventWhereAssignee",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "assignerId",
            "in": "query",
            "description": "ID Создателя задачи",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 13
          },
          {
            "name": "taskStatus",
            "in": "query",
            "description": "Статус задачи",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NEW",
                "IN_PROGRESS",
                "EXPIRED",
                "DONE"
              ]
            }
          },
          {
            "name": "deadlineLowerLimit",
            "in": "query",
            "description": "Мягкий дедлайн задачи",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "deadlineUpperLimit",
            "in": "query",
            "description": "Жесткий дедлайн задачи",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "subEventTasksGet",
            "in": "query",
            "description": "Включить получение подзадач",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/system-privileges": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "summary": "Получение списка системных привилегий",
        "operationId": "getSystemPrivileges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivilegeResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/search": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "summary": "Поиск ролей по совпадению в названии",
        "operationId": "searchByName",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Имя роли",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/privileges": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "summary": "Получение списка всех привилегий",
        "operationId": "getAllPrivileges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivilegeResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/organizational": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "summary": "Получение организационных ролей",
        "operationId": "getOrganizationalRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/organizational-privileges": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "summary": "Получение списка организационных привилегий",
        "operationId": "getOrganizationalPrivileges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivilegeResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/profile/system-privileges": {
      "get": {
        "tags": [
          "profile-controller"
        ],
        "summary": "Получение списка системных привилегий пользователя",
        "operationId": "getUserSystemPrivileges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivilegeResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/profile/event-privileges/{id}": {
      "get": {
        "tags": [
          "profile-controller"
        ],
        "summary": "Получение списка всех привилегий пользователя в данном мероприятии",
        "operationId": "getUserEventPrivileges",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrivilegeResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{id}/organizers": {
      "get": {
        "tags": [
          "event-controller"
        ],
        "summary": "Получение списка пользователей, имеющих роль в данном мероприятии",
        "operationId": "getUsersHavingRoles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{id}/participants/newlist": {
      "post": {
        "tags": [
          "participants-controller"
        ],
        "summary": "Импорт нового списка участников данного мероприятия",
        "operationId": "setParticipantsList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParticipantsListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParticipantsListResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{id}/participants/list": {
      "get": {
        "tags": [
          "participants-controller"
        ],
        "summary": "Получение списка участников данного мероприятия",
        "operationId": "getParticipantsList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParticipantsListResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{id}/participants/list/xlsx": {
      "get": {
        "tags": [
          "participants-controller"
        ],
        "summary": "Экспорт списка участников данного мероприятия в формате xlsx",
        "operationId": "getParticipantsXlsxFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParticipantsListResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{id}/participants": {
      "put": {
        "tags": [
          "participants-controller"
        ],
        "summary": "Изменение статуса присутствия участника на данном мероприятии",
        "operationId": "changePresence",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID мероприятия",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "idParticipant",
            "in": "query",
            "description": "ID участника мероприятия",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "isVisited",
            "in": "query",
            "description": "Статус посещения участником мероприятия (да/нет)",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParticipantResponse"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PlaceShortDataRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Университет ИТМО"
          },
          "address": {
            "type": "string",
            "example": "Кронверкский пр., 49"
          }
        }
      },
      "TaskRequest": {
        "required": [
          "deadline",
          "description",
          "eventId",
          "notificationDeadline",
          "title"
        ],
        "type": "object",
        "properties": {
          "eventId": {
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "assignee": {
            "$ref": "#/components/schemas/UserShortDataRequest"
          },
          "title": {
            "type": "string",
            "example": "Настроить проектор"
          },
          "description": {
            "type": "string",
            "example": "Настроить проектор в коворкинге"
          },
          "taskStatus": {
            "type": "string",
            "enum": [
              "NEW",
              "IN_PROGRESS",
              "EXPIRED",
              "DONE"
            ]
          },
          "place": {
            "$ref": "#/components/schemas/PlaceShortDataRequest"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "notificationDeadline": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserShortDataRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Иван"
          },
          "surname": {
            "type": "string",
            "example": "Иванов"
          }
        }
      },
      "PlaceShortDataResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Университет ИТМО"
          },
          "address": {
            "type": "string",
            "example": "Кронверкский пр., 49"
          }
        }
      },
      "TaskResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "eventId": {
            "type": "integer",
            "format": "int32",
            "example": 827
          },
          "title": {
            "type": "string",
            "example": "Настроить проектор"
          },
          "description": {
            "type": "string",
            "example": "Настроить проектор в коворкинге"
          },
          "taskStatus": {
            "type": "string",
            "enum": [
              "NEW",
              "IN_PROGRESS",
              "EXPIRED",
              "DONE"
            ]
          },
          "assignee": {
            "$ref": "#/components/schemas/UserShortDataResponse"
          },
          "place": {
            "$ref": "#/components/schemas/PlaceShortDataResponse"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "notificationDeadline": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserShortDataResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Иван"
          },
          "surname": {
            "type": "string",
            "example": "Иванов"
          }
        }
      },
      "RoleRequest": {
        "required": [
          "description",
          "isEvent",
          "name",
          "privileges"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "example": "Администратор"
          },
          "description": {
            "type": "string",
            "example": "Администратор системы"
          },
          "isEvent": {
            "type": "boolean"
          },
          "privileges": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "PrivilegeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "APPROVE_REGISTRATION_REQUEST",
            "enum": [
              "APPROVE_REGISTRATION_REQUEST",
              "REJECT_REGISTRATION_REQUEST",
              "MODIFY_PROFILE_DATA",
              "VIEW_OTHER_USERS_PROFILE",
              "VIEW_ALL_EVENTS_AND_ACTIVITIES",
              "SEARCH_EVENTS_AND_ACTIVITIES",
              "CREATE_EVENT",
              "VIEW_EVENT_PLACE",
              "VIEW_ROUTE_BETWEEN_ROOMS",
              "ASSIGN_ORGANIZER_ROLE",
              "REVOKE_ORGANIZER_ROLE",
              "CREATE_EVENT_VENUE",
              "DELETE_EVENT_VENUE",
              "EDIT_EVENT_VENUE",
              "CREATE_ROLE",
              "DELETE_ROLE",
              "EDIT_ROLE",
              "ASSIGN_SYSTEM_ROLE",
              "REVOKE_SYSTEM_ROLE",
              "EDIT_EVENT_INFO",
              "ASSIGN_ASSISTANT_ROLE",
              "REVOKE_ASSISTANT_ROLE",
              "VIEW_ORGANIZER_USERS",
              "VIEW_ASSISTANT_USERS",
              "CREATE_EVENT_ACTIVITIES",
              "DELETE_EVENT_ACTIVITIES",
              "EDIT_EVENT_ACTIVITIES",
              "VIEW_EVENT_ACTIVITIES",
              "CREATE_TASK",
              "DELETE_TASK",
              "EDIT_TASK",
              "CHANGE_TASK_STATUS",
              "ASSIGN_TASK_EXECUTOR",
              "REPLACE_TASK_EXECUTOR",
              "DELETE_TASK_EXECUTOR",
              "ASSIGN_ORGANIZATIONAL_ROLE",
              "REVOKE_ORGANIZATIONAL_ROLE",
              "VIEW_ALL_EVENT_TASKS",
              "CHANGE_ASSIGNED_TASK_STATUS",
              "ASSIGN_SELF_AS_TASK_EXECUTOR",
              "DECLINE_TASK_EXECUTION",
              "IMPORT_PARTICIPANT_LIST_XLSX",
              "EXPORT_PARTICIPANT_LIST_XLSX",
              "WORK_WITH_PARTICIPANT_LIST"
            ]
          },
          "description": {
            "type": "string",
            "example": "Одобрение заявок на регистрацию"
          }
        }
      },
      "RoleResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Администратор"
          },
          "description": {
            "type": "string",
            "example": "Администратор системы"
          },
          "type": {
            "type": "string",
            "example": "SYSTEM",
            "enum": [
              "SYSTEM",
              "EVENT"
            ]
          },
          "privileges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrivilegeResponse"
            }
          }
        }
      },
      "UserChangePasswordRequest": {
        "required": [
          "confirmNewPassword",
          "newPassword",
          "oldPassword"
        ],
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "example": "123password"
          },
          "newPassword": {
            "maxLength": 2147483647,
            "minLength": 8,
            "type": "string",
            "example": "123passwordNEW"
          },
          "confirmNewPassword": {
            "type": "string",
            "example": "123passwordNEW"
          }
        }
      },
      "UserChangeNameRequest": {
        "required": [
          "name",
          "surname"
        ],
        "type": "object",
        "properties": {
          "name": {
            "pattern": "^[а-яА-ЯёЁ]+$",
            "type": "string",
            "example": "Лидия"
          },
          "surname": {
            "pattern": "^[а-яА-ЯёЁ]+$",
            "type": "string",
            "example": "Петрова"
          }
        }
      },
      "UserChangeEmailRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "pattern": "^\\w[\\w\\-\\.]*@(niu|idu.)?itmo\\.ru$",
            "type": "string",
            "example": "333111@niuitmo.ru"
          }
        }
      },
      "PlaceRequest": {
        "required": [
          "address",
          "description",
          "format",
          "latitude",
          "longitude",
          "name",
          "room"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Университет ИТМО"
          },
          "address": {
            "type": "string",
            "example": "Кронверкский, 49"
          },
          "format": {
            "type": "string",
            "enum": [
              "ONLINE",
              "OFFLINE",
              "HYBRID"
            ]
          },
          "room": {
            "type": "string",
            "example": "ауд. 2304"
          },
          "description": {
            "type": "string",
            "example": "Комната переговоров"
          },
          "latitude": {
            "maximum": 90,
            "exclusiveMaximum": false,
            "minimum": -90,
            "exclusiveMinimum": false,
            "type": "number",
            "format": "float",
            "example": 85.234
          },
          "longitude": {
            "maximum": 180,
            "exclusiveMaximum": false,
            "minimum": -180,
            "exclusiveMinimum": false,
            "type": "number",
            "format": "float",
            "example": 150.234
          }
        }
      },
      "PlaceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Университет ИТМО"
          },
          "address": {
            "type": "string",
            "example": "Кронверкский пр., 49"
          },
          "format": {
            "type": "string",
            "enum": [
              "ONLINE",
              "OFFLINE",
              "HYBRID"
            ]
          },
          "room": {
            "type": "string",
            "example": "ауд. 2304"
          },
          "description": {
            "type": "string",
            "example": "Комната переговоров"
          },
          "latitude": {
            "type": "number",
            "format": "float",
            "example": 85.234
          },
          "longitude": {
            "type": "number",
            "format": "float",
            "example": 150.234
          },
          "renderInfo": {
            "type": "string"
          }
        }
      },
      "NotificationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "example": "Ваша задача просрочнена"
          },
          "description": {
            "type": "string",
            "example": "Ваша задача 'Провести инструктаж' к мероприятию 'День первокурсника' просрочнена"
          },
          "seen": {
            "type": "boolean"
          },
          "sent_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventRequest": {
        "required": [
          "endDate",
          "format",
          "fullDescription",
          "image",
          "participantAgeHighest",
          "participantAgeLowest",
          "participantLimit",
          "placeId",
          "preparingEnd",
          "preparingStart",
          "registrationEnd",
          "registrationStart",
          "shortDescription",
          "startDate",
          "status",
          "title"
        ],
        "type": "object",
        "properties": {
          "placeId": {
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "example": 67
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string",
            "example": "День первокурсника"
          },
          "shortDescription": {
            "type": "string",
            "example": "День для всех первокурсников"
          },
          "fullDescription": {
            "type": "string",
            "example": "День для всех первокурсников, где они познакомятся с университетом ИТМО"
          },
          "format": {
            "type": "string",
            "example": "OFFLINE",
            "enum": [
              "ONLINE",
              "OFFLINE",
              "HYBRID"
            ]
          },
          "status": {
            "type": "string",
            "example": "PUBLISHED",
            "enum": [
              "DRAFT",
              "PUBLISHED",
              "COMPLETED",
              "CANCELED"
            ]
          },
          "registrationStart": {
            "type": "string",
            "format": "date-time"
          },
          "registrationEnd": {
            "type": "string",
            "format": "date-time"
          },
          "parent": {
            "type": "integer",
            "format": "int32",
            "example": 123
          },
          "participantLimit": {
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "example": 12000
          },
          "participantAgeLowest": {
            "maximum": 150,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "example": 16
          },
          "participantAgeHighest": {
            "maximum": 150,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "example": 30
          },
          "preparingStart": {
            "type": "string",
            "format": "date-time"
          },
          "preparingEnd": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "EventResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 3242
          },
          "placeId": {
            "type": "integer",
            "format": "int32",
            "example": 12
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string",
            "example": "День первокурсника"
          },
          "shortDescription": {
            "type": "string",
            "example": "День для всех первокурсников"
          },
          "fullDescription": {
            "type": "string",
            "example": "День для всех первокурсников, где они познакомятся с университетом ИТМО"
          },
          "format": {
            "type": "string",
            "enum": [
              "ONLINE",
              "OFFLINE",
              "HYBRID"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "PUBLISHED",
              "COMPLETED",
              "CANCELED"
            ]
          },
          "registrationStart": {
            "type": "string",
            "format": "date-time"
          },
          "registrationEnd": {
            "type": "string",
            "format": "date-time"
          },
          "parent": {
            "type": "integer",
            "format": "int32"
          },
          "participantLimit": {
            "type": "integer",
            "format": "int32",
            "example": 1200
          },
          "participantAgeLowest": {
            "type": "integer",
            "format": "int32",
            "example": 16
          },
          "participantAgeHighest": {
            "type": "integer",
            "format": "int32"
          },
          "preparingStart": {
            "type": "string",
            "format": "date-time"
          },
          "preparingEnd": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RegistrationUserRequest": {
        "required": [
          "confirmPassword",
          "email",
          "name",
          "password",
          "surname"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Иван"
          },
          "surname": {
            "type": "string",
            "example": "Иванов"
          },
          "email": {
            "pattern": "^\\w[\\w\\-.]*@(niu|idu.)?itmo\\.ru$",
            "type": "string",
            "example": "333666@niuitmo.ru"
          },
          "password": {
            "type": "string",
            "example": "PaSsWoRd1!"
          },
          "confirmPassword": {
            "type": "string",
            "example": "PaSsWoRd1!"
          }
        }
      },
      "LoginRequest": {
        "required": [
          "login",
          "password"
        ],
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "333666@niuitmo.ru"
          },
          "password": {
            "type": "string",
            "example": "PaSsWoRd1!"
          }
        }
      },
      "CreateEventRequest": {
        "required": [
          "title",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "example": 3242
          },
          "title": {
            "type": "string",
            "example": "День первокурсника"
          }
        }
      },
      "UserRoleResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 13
          },
          "name": {
            "type": "string",
            "example": "Иван"
          },
          "surname": {
            "type": "string",
            "example": "Иванов"
          },
          "roleName": {
            "type": "string",
            "example": "Организатор"
          }
        }
      },
      "ParticipantResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 13
          },
          "name": {
            "type": "string",
            "example": "Сергей"
          },
          "email": {
            "type": "string",
            "example": "34566@niuitmo.ru"
          },
          "additionalInf0": {
            "type": "string",
            "example": "Сотрудник ИТМО"
          },
          "visited": {
            "type": "boolean",
            "example": true
          },
          "eventId": {
            "type": "integer",
            "format": "int32",
            "example": 5
          }
        }
      },
      "ParticipantsListRequest": {
        "required": [
          "name",
          "email",
          "additionalInfo",
          "visited"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 13
          },
          "name": {
            "type": "string",
            "example": "Сергей"
          },
          "email": {
            "type": "string",
            "example": "34566@niuitmo.ru"
          },
          "additionalInf0": {
            "type": "string",
            "example": "Сотрудник ИТМО"
          },
          "visited": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ParticipantsListResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 13
          },
          "name": {
            "type": "string",
            "example": "Сергей"
          },
          "email": {
            "type": "string",
            "example": "34566@niuitmo.ru"
          },
          "additionalInf0": {
            "type": "string",
            "example": "Сотрудник ИТМО"
          },
          "visited": {
            "type": "boolean",
            "example": true
          },
          "eventId": {
            "type": "integer",
            "format": "int32",
            "example": 5
          }
        }
      }
    }
  }
}